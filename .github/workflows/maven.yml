# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}                 
  ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}          
#   ECS_SERVICE: ${{ secrets.AWS_ECS_SERVICE }}             
#   ECS_CLUSTER: ${{ secrets.AWS_ECS_CLUSTER }}             
#   ECS_TASK_DEFINITION: ${{ secrets.AWS_ECS_TASK_DEFINITION }} 
#   CONTAINER_NAME:  ${{ secrets.AWS_CONTAINER_NAME }}        

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}    
    
    - name: Build with Maven
      run: mvn clean install

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{github.run_number}}

      run: |
        # Build a docker container and
        docker build -t hello-world-spring-boot:$IMAGE_TAG .
        sudo docker tag hello-world-spring-boot:$IMAGE_TAG $ECR_REGISTRY:$IMAGE_TAG
        sudo docker push $ECR_REGISTRY:$IMAGE_TAG
        echo $IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo $GITHUB_OUTPUT


      

